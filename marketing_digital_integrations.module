<?php

/**
 * @file
 * Marketing Digital Integrations module.
 */

use Drupal\Core\Render\Markup;

/**
 * Implements hook_page_attachments().
 */
function marketing_digital_integrations_page_attachments(array &$page) {
  // Adding scripts for not admin pages only.
  $is_admin_page = \Drupal::service('router.admin_context')->isAdminRoute();
  if (!$is_admin_page) {
    // Adding 3rd-party tracking code for not admin roles.
    if (!\Drupal::currentUser()->hasPermission('administer site configuration')) {
      marketing_digital_integrations_add_privy_code($page);
      marketing_digital_integrations_add_google_adwords_remarketing_tag($page);
      marketing_digital_integrations_add_facebook_pixel($page);
      marketing_digital_integrations_add_hubspot_tag($page);
      marketing_digital_integrations_add_klaviyo_tag($page);
      marketing_digital_integrations_add_adroll_tag($page);
    }
  }
}

/**
 * Privy.
 *
 * @param array $page
 *   HTML head array.
 */
function marketing_digital_integrations_add_privy_code(&$page) {
  $config_values = marketing_digital_integrations_tracking_config_values('use_privy', 'privy_code');

  if (empty($config_values['use_value']) || empty($config_values['code_value'])) {
    return;
  }

  // Adding Privy javascript script.
  $js = <<<PRIVY
   var _d_site = _d_site || '{$config_values['code_value']}';
PRIVY;
  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#value' => Markup::create($js),
    ],
    'mdi-privy-js',
  ];

  // Adding Privy widget script.
  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#attributes' => [
        'src' => 'https://widget.privy.com/assets/widget.js',
      ],
    ],
    'mdi-privy-widget-js',
  ];
}

/**
 * Google Adwords Remarketing.
 *
 * @param array $page
 *   HTML head array.
 */
function marketing_digital_integrations_add_google_adwords_remarketing_tag(&$page) {
  $config_values = marketing_digital_integrations_tracking_config_values('use_gar', 'gar_code');

  if (empty($config_values['use_value']) || empty($config_values['code_value'])) {
    return;
  }

  // Adding Google Adwords Remarketing Tag.
  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#attributes' => [
        'async' => TRUE,
        'src' => "https://www.googletagmanager.com/gtag/js?id=AW-{$config_values['code_value']}",
      ],
    ],
    'mdi-google-adwords-remarketing-tag-js',
  ];

  // Adding Google Adwords Remarketing javascript script.
  $js = <<<GOOGLETAG
(function () {
   window.dataLayer = window.dataLayer || [];
   function gtag(){dataLayer.push(arguments);}
   gtag('js', new Date());

   gtag('config', 'AW-{$config_values['code_value']}');
})();
GOOGLETAG;
  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#value' => Markup::create($js),
    ],
    'mdi-google-adwords-remarketing-js',
  ];
}

/**
 * Facebook Pixel.
 *
 * @param array $page
 *   HTML head array.
 */
function marketing_digital_integrations_add_facebook_pixel(&$page) {
  $config_values = marketing_digital_integrations_tracking_config_values('use_facebook_pixel', 'facebook_pixel_code');

  if (empty($config_values['use_value']) || empty($config_values['code_value'])) {
    return;
  }

  // Adding Facebook Pixel javascript script.
  $js = <<<FACEBOOKPIXEL
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '{$config_values['code_value']}');
  fbq('track', 'PageView');
FACEBOOKPIXEL;
  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#value' => Markup::create($js),
    ],
    'mdi-facebook-pixel-script',
  ];

  // Adding Facebook Pixel javascript noscript.
  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'noscript',
      '#value' => "<img height='1' width='1' style='display:none' src='https://www.facebook.com/tr?id={$config_values['code_value']}&ev=PageView&noscript=1' />"
    ],
    'mdi-facebook-pixel--noscript',
  ];
}

/**
 * Hubspot.
 *
 * @param array $page
 *   HTML head array.
 */
function marketing_digital_integrations_add_hubspot_tag(&$page) {
  $config_values = marketing_digital_integrations_tracking_config_values('use_hubspot', 'hubspot_code');

  if (empty($config_values['use_value']) || empty($config_values['code_value'])) {
    return;
  }

  // Adding Hubspot script.
  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#attributes' => [
        'async' => TRUE,
        'src' => '//js.hs-scripts.com/' . $config_values['code_value'] . '.js',
      ],
    ],
    'mdi-hubspot-tag-js',
  ];
}

/**
 * Klaviyo.
 *
 * @param array $page
 *   HTML head array.
 */
function marketing_digital_integrations_add_klaviyo_tag(&$page) {
  $config_values = marketing_digital_integrations_tracking_config_values('use_klaviyo', 'klaviyo_code');

  if (empty($config_values['use_value']) || empty($config_values['code_value'])) {
    return;
  }

  // Adding Klaviyo script.
  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#attributes' => [
        'async' => TRUE,
        'src' => "https://static.klaviyo.com/onsite/js/klaviyo.js?company_id={$config_values['code_value']}",
      ],
    ],
    'mdi-klaviyo-tag-js',
  ];
}

/**
 * Adroll.
 *
 * @param array $page
 *   HTML head array.
 */
function marketing_digital_integrations_add_adroll_tag(&$page) {
  $config_values = marketing_digital_integrations_tracking_config_values('use_adroll', 'adroll_adv_id');
  $adroll_adv_id = $config_values['code_value'];
  $adroll_pix_id = \Drupal::configFactory()->get('marketing_digital_integrations.affiliates_codes')->get('adroll_pix_id');

  if (empty($config_values['use_value']) || empty($adroll_adv_id) || empty($adroll_pix_id)) {
    return;
  }

  // Adding Adroll Tag.
  $js = <<<Adroll
    adroll_adv_id = "$adroll_adv_id";
    adroll_pix_id = "$adroll_pix_id";
    (function () {
        var _onload = function(){
            if (document.readyState && !/loaded|complete/.test(document.readyState)){setTimeout(_onload, 10);return}
            if (!window.__adroll_loaded){__adroll_loaded=true;setTimeout(_onload, 50);return}
            var scr = document.createElement("script");
            var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
            scr.setAttribute('async', 'true');
            scr.type = "text/javascript";
            scr.src = host + "/j/roundtrip.js";
            ((document.getElementsByTagName('head') || [null])[0] ||
                document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
        };
        if (window.addEventListener) {window.addEventListener('load', _onload, false);}
        else {window.attachEvent('onload', _onload)}
    }());
Adroll;

  $page['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#value' => Markup::create($js),
    ],
    'mdi-adroll-tag-js',
  ];
}

/**
 * Helper function to get configs values from Config Factory service.
 *
 * @param string $use_config
 *   Name of 'use' config.
 * @param string $code_config
 *   Name of 'code' config.
 *
 * @return array
 *   Array of 'use' and 'code' configs values.
 */
function marketing_digital_integrations_tracking_config_values($use_config, $code_config) {
  $config_factory = \Drupal::configFactory();
  $use_value = $config_factory->get('marketing_digital_integrations.affiliates_codes')->get($use_config);
  $code_value = $config_factory->get('marketing_digital_integrations.affiliates_codes')->get($code_config);

  return [
    'use_value' => $use_value,
    'code_value' => $code_value,
  ];
}
